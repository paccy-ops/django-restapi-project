# Generated by Django 4.0 on 2022-04-11 08:34

import boreco.azure_storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('full_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cvr', models.CharField(db_index=True, max_length=255, unique=True)),
                ('client_name', models.CharField(max_length=255)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients', to='core.user')),
            ],
            options={
                'db_table': 'clients',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='VatPastRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cvr', models.CharField(db_index=True, max_length=255)),
                ('period_start', models.DateField(blank=True, null=True)),
                ('period_end', models.DateField(blank=True, null=True)),
                ('receipt_number', models.IntegerField(blank=True, default=0, null=True)),
                ('person_filing_vat', models.CharField(blank=True, max_length=255, null=True)),
                ('person_cvr', models.CharField(blank=True, max_length=255, null=True)),
                ('client_name', models.CharField(blank=True, max_length=255, null=True)),
                ('client_address', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('output_vat', models.CharField(blank=True, max_length=255, null=True)),
                ('vat_goods_abroad', models.CharField(blank=True, max_length=255, null=True)),
                ('vat_services_abroad', models.CharField(blank=True, max_length=255, null=True)),
                ('input_vat', models.CharField(blank=True, max_length=255, null=True)),
                ('oil_bottled_gas_vat', models.CharField(blank=True, max_length=255, null=True)),
                ('electricity_vat', models.CharField(blank=True, max_length=255, null=True)),
                ('natural_vat', models.CharField(blank=True, max_length=255, null=True)),
                ('coal_vat', models.CharField(blank=True, max_length=255, null=True)),
                ('co2_vat', models.CharField(blank=True, max_length=255, null=True)),
                ('water_vat', models.CharField(blank=True, max_length=255, null=True)),
                ('total_vat', models.CharField(blank=True, max_length=255, null=True)),
                ('scrape_date', models.DateTimeField(blank=True, null=True)),
                ('order', models.IntegerField(blank=True, default=0, null=True)),
                ('filling_date', models.DateField(auto_now=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('indicating_type', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('updated_at', models.DateField(auto_now=True, null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.client')),
                ('client_responsible', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.user')),
            ],
            options={
                'db_table': 'vatpastrecord',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='VatCurrent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cvr', models.CharField(db_index=True, max_length=255)),
                ('period_start', models.DateField(blank=True, null=True)),
                ('period_end', models.DateField(blank=True, null=True)),
                ('filling_deadline', models.DateField(blank=True, null=True)),
                ('report_contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('report_contact_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('report_contact_email', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateField(auto_now=True)),
                ('updated_at', models.DateField(auto_now_add=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.client')),
                ('client_responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.user')),
            ],
            options={
                'db_table': 'vatcurrent',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Tinglysning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cvr', models.CharField(db_index=True, max_length=255)),
                ('tinglysning', models.CharField(max_length=255)),
                ('document_type', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('concern', models.CharField(max_length=255)),
                ('date_serial', models.CharField(max_length=255)),
                ('file_uploaded', models.FileField(blank=True, null=True, storage=boreco.azure_storage.PrivateAzureStorage(), upload_to='')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.client')),
            ],
            options={
                'db_table': 'tinglysning',
                'ordering': ('-cvr',),
            },
        ),
        migrations.CreateModel(
            name='TaxReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cvr', models.CharField(db_index=True, max_length=255, unique=True)),
                ('skatAmount', models.IntegerField()),
                ('casewareAmount', models.IntegerField()),
                ('identifier', models.CharField(max_length=100)),
                ('filingStatus', models.CharField(max_length=100)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.client')),
            ],
            options={
                'db_table': 'taxreturn',
            },
        ),
        migrations.CreateModel(
            name='Skattekonto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cvr', models.CharField(db_index=True, max_length=255, unique=True)),
                ('endingBalance', models.IntegerField()),
                ('statementAccount', models.CharField(max_length=255)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.client')),
            ],
            options={
                'db_table': 'skattekonto',
            },
        ),
        migrations.CreateModel(
            name='EIndkomst',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cvr', models.CharField(db_index=True, max_length=255)),
                ('year', models.CharField(max_length=255, null=True)),
                ('months', models.CharField(max_length=255, null=True)),
                ('order', models.IntegerField(default=0)),
                ('data', models.JSONField()),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.client')),
            ],
            options={
                'db_table': 'eindkomst',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Dividends',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cvr', models.CharField(db_index=True, max_length=255)),
                ('accounting_period_start', models.CharField(blank=True, max_length=255, null=True)),
                ('accounting_period_end', models.CharField(blank=True, max_length=255, null=True)),
                ('decision_date', models.DateField(blank=True, null=True)),
                ('skat_recipient_vat', models.FloatField(blank=True, null=True)),
                ('skat_recepient_tax', models.FloatField(blank=True, null=True)),
                ('skat_total_dividend', models.FloatField(blank=True, null=True)),
                ('skat_total_tax', models.FloatField(blank=True, null=True)),
                ('caseware_total_dividend', models.IntegerField(default=0)),
                ('created_at', models.DateField(auto_now=True)),
                ('updated_at', models.DateField(auto_now_add=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.client')),
            ],
            options={
                'db_table': 'dividends',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='ClientAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_created=True)),
                ('cvr', models.CharField(db_index=True, max_length=255, unique=True)),
                ('assignment', models.CharField(max_length=255)),
                ('updated_at', models.DateField(auto_now=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='core.client')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
            options={
                'db_table': 'clientassignment',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='AccountStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cvr', models.CharField(db_index=True, max_length=255)),
                ('period_date', models.DateField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('balance', models.FloatField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('status', models.CharField(max_length=100)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.client')),
            ],
            options={
                'db_table': 'accountStatus',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='AccountStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cvr', models.CharField(db_index=True, max_length=255, unique=True)),
                ('entry_date', models.DateField(auto_now=True)),
                ('entry_name', models.CharField(max_length=255)),
                ('further_initiatives', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.client')),
            ],
            options={
                'db_table': 'accountstatement',
                'ordering': ('entry_date',),
            },
        ),
    ]
